openapi: 3.0.3
info:
  title: WASAText API
  description: API for the WASAText messaging platform.
  version: 1.0.0

paths:
  /session:
    post:
      tags:
        - User
      summary: Logs in the user
      operationId: doLogin
      description: >
        If the user does not exist, it will be created. If the user exists, the user identifier is returned.
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  minLength: 3
                  maxLength: 16
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "abcdef012345"

  /users/me/name:
    put:
      tags:
        - User
      summary: Update user name
      operationId: setMyUserName
      requestBody:
        description: New username
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "new_username"
      responses:
        '200':
          description: Name updated successfully
        '400':
          description: Username already exists

  /users/me/photo:
    put:
      tags:
        - User
      summary: Update profile photo
      operationId: setMyPhoto
      requestBody:
        description: Profile photo upload
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: Photo updated successfully

  /conversations:
    get:
      tags:
        - Conversations
      summary: Retrieve all conversations
      operationId: getMyConversations
      responses:
        '200':
          description: List of conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "conversation123"
                    name:
                      type: string
                      example: "Group Chat"
                    lastMessage:
                      type: string
                      example: "Hey, how are you?"
                    timestamp:
                      type: string
                      format: date-time

  /conversations/{id}:
    get:
      tags:
        - Conversations
      summary: Retrieve messages in a conversation
      operationId: getConversation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Conversation ID
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    messageId:
                      type: string
                      example: "message123"
                    sender:
                      type: string
                      example: "John"
                    content:
                      type: string
                      example: "Hello there!"
                    timestamp:
                      type: string
                      format: date-time

  /messages:
    post:
      tags:
        - Messages
      summary: Send a new message
      operationId: sendMessage
      requestBody:
        description: Message details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                  example: "conversation123"
                content:
                  type: string
                  example: "Hello!"
      responses:
        '201':
          description: Message sent successfully

  /messages/{id}/forward:
    post:
      tags:
        - Messages
      summary: Forward a message
      operationId: forwardMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Message ID to forward
      requestBody:
        description: Forwarding details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toConversationId:
                  type: string
                  example: "conversation456"
      responses:
        '201':
          description: Message forwarded successfully

  /messages/{id}/comment:
    post:
      tags:
        - Messages
      summary: React to a message
      operationId: commentMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Message ID to react to
      requestBody:
        description: Reaction details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emoji:
                  type: string
                  example: "üëç"
      responses:
        '201':
          description: Reaction added successfully
    delete:
      tags:
        - Messages
      summary: Remove a reaction
      operationId: uncommentMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Message ID to remove reaction from
      responses:
        '200':
          description: Reaction removed successfully

  /groups/{id}/leave:
    post:
      tags:
        - Groups
      summary: Leave a group
      operationId: leaveGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group ID to leave
      responses:
        '200':
          description: Left group successfully

  /groups/{id}/photo:
    put:
      tags:
        - Groups
      summary: Update group photo
      operationId: setGroupPhoto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group ID
      requestBody:
        description: Group photo upload
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: Group photo updated successfully
